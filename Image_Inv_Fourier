%% Description
% MATLAB Script to complete inverse Fourier Transform on image (to recover
% original image after passing through lens)

% Written by: Uri Kaufman 02/02/2025

%% Notes
% Better Outcomes from:
    % F Sample Exp. (30us, 2.7OD)_90°.jpg
    % New2 X Sample (30us, 3.5OD)_90°.tiff
    % X Sample (30us, 1.5OD)_90°.jpg
    % New2 X Sample (30us, 2.5OD)_90°.tiff

%Current Best X Outcome from:
    % New2 X Sample (30us, 2.5OD)_90°.tiff



%Very Visible Large Speckle Pattern from: F Sample Exp. (30us, 5.0OD)_90°.jpg

%% Constants
close all
clear all
clc

IMG_PIX_WIDTH = 2048;
IMG_PIX_HEIGHT = 2448;
IMG_PIX_DEPTH = 3;
IMG_CROP_LENGTH = 700; %Amount of pixels to crop image by (from each direction in length and width - e.g. a value of 700 will cut 700 from the top, bottom, left and right of the image)
NUM_IMAGES = 10;

%% Importing Image

%Initiate Img arrays
Img_Sample = zeros(IMG_PIX_WIDTH, IMG_PIX_HEIGHT, IMG_PIX_DEPTH);
Img_Inv_Fourier = zeros(IMG_PIX_WIDTH, IMG_PIX_HEIGHT); %Inverse Fourier of sample image

%Read in image
Img_Sample = imread("New2 X Sample (30us, 2.5OD)_90°.tiff"); 
Img_Sample_One_Plane = Img_Sample(:,:,1);

%Read in image array
% for i = 1:NUM_IMAGES
%     %Use sprintf() and %d to quickly iterate through file names and read them in
%     Img_Sample_Array(:,:,1,i) = imread(sprintf("F Sample BETTER (30us, %dOD)_90°.tiff", round(double((i-1)*0.5), 1) )); %Referance Speckle
% end

%% Processing
%Crop Image by IMG_CROP_LENGTH
%Img_Sample_Cropped = Img_Sample_One_Plane(IMG_CROP_LENGTH:(IMG_PIX_WIDTH - IMG_CROP_LENGTH), IMG_CROP_LENGTH:(IMG_PIX_HEIGHT - IMG_CROP_LENGTH));

%Take inv Fourier transform
Img_Inv_Fourier = ifftshift(ifft2(Img_Sample_One_Plane));

%Take log of magnitude of inv Fourier image (for graphing)
Img_log = log(abs(Img_Inv_Fourier));

%Take only bottom right quadrant - needed only if you don't ifftshift()
%Img_fourth_quadrant = Img_log(IMG_PIX_WIDTH/2:IMG_PIX_WIDTH, IMG_PIX_HEIGHT/2:IMG_PIX_HEIGHT);

%% Writing New Output Image
%imwrite(...);


%% Displaying Figures
subplot(2, 2, 1);
imshow(Img_Sample);
title("Original Image (Fourier Transformed)");

subplot(2, 2, 2);
imshow(Img_log, []);
title("Inv Fourier Image (Log scaled)")

subplot(2, 2, 3);
imshow(Img_Sample, [], Colormap=hot);
title("Original Image (Fourier Transformed) Heatmap")

subplot(2, 2, 4);
Img_squeezed = squeeze(Img_log);
imshow(Img_squeezed, [], Colormap=parula);
title("Heatmap of Inv Fourier Image (Log Scaled)");
